datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  email       String?  @unique
  password    String?
  city        String?
  state       String?
  country     String?
  occupation  String?
  phoneNumber String?
  role        UserRole
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  transactions  Transaction[]
  affiliateStat AffiliateStat[]
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  cost      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products Product[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  productId   String   @db.ObjectId
  name        String
  price       Int
  description String
  category    String
  rating      Float
  supply      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  transaction Transaction @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model ProductStat {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  productId            String
  yearlySalesTotal     Int
  yearlyTotalSoldUnits Int
  year                 Int
  monthlyData          Json
  dailyData            Json
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model OverallStat {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  totalCustomers       Int
  yearlySalesTotal     Int
  yearlyTotalSoldUnits Int
  year                 Int
  monthlyData          Json
  dailyData            Json
  salesByCategory      Json
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model AffiliateStat {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

enum UserRole {
  USER
  ADMIN
  SUPERADMIN
}
