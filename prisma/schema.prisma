datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  email       String   @unique
  password    String
  address     String?
  phone       String
  admin       Boolean  @default(false)
  favorites   String[] @default([])
  
  // Relations
  orders      Order[]
  ratings     Rating[]
  comments    Comment[]
  reports     Report[]
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl    String
  name        String
  color       String
  sizes       String[]
  description String
  categoryId  String   @db.ObjectId
  gender      String
  price       Float
  status      Boolean  @default(true)

  // Relations
  category    Category @relation(fields: [categoryId], references: [id])
  ratings     Rating[]
  comments    Comment[]
}

model Order {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  products   Json
  buyerId    String   @db.ObjectId
  address    String
  status     Boolean  @default(true)
  prepare    Boolean  @default(true)
  onWay      Boolean  @default(false)
  delivered  Boolean  @default(false)
  cancel     Boolean  @default(false)
  orderDate  DateTime @default(now())

  // Relations
  buyer      User @relation(fields: [buyerId], references: [id])
  reports    Report[]
}

model Rating {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String @db.ObjectId
  rating  Int      @db.Int
  ownerId String   @db.ObjectId

  // Relations
  product Product @relation(fields: [productId], references: [id])
  owner   User    @relation(fields: [ownerId], references: [id])
}

model Category {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  genreId String   @db.ObjectId
  status  Boolean  @default(true)

  // Relations
  genre   Genre    @relation(fields: [genreId], references: [id])
  products Product[]
}

model Genre {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  name   String   @unique
  status Boolean  @default(true)

  // Relations
  categories Category[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String   @db.ObjectId
  comment   String
  authorId  String   @db.ObjectId
  createdAt DateTime @default(now())

  // Relations
  product Product @relation(fields: [productId], references: [id])
  author  User    @relation(fields: [authorId], references: [id])
}

model Image {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  url String
}

model MiniImage {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  url String
}

model Report {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String   @db.ObjectId
  userId    String   @db.ObjectId
  content   String
  createdAt DateTime @default(now())

  // Relations
  order Order @relation(fields: [orderId], references: [id])
  user  User  @relation(fields: [userId], references: [id])
}
